
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  // output = "./diagrama.svg" 
  // theme = "dark"
}

model Endereco {
  id          Int      @id @default(autoincrement())
  cep         String
  logradouro  String
  numero      String
  complemento String?
  bairro      String
  cidade      String
  estado      String
  
  ong         Ong?
  usuario     Usuario?
}

model CertificadoImpacto {
  id                  Int      @id @default(autoincrement())
  codigoVerificacao   String   @unique @default(uuid())
  dataEmissao         DateTime @default(now())
  descricaoImpacto    String
  urlCertificadoPdf   String? 
  doacao              Doacao   @relation(fields: [idDoacao], references: [id])
  idDoacao            Int      @unique
}

model Usuario {
  id          Int        @id @default(autoincrement())
  cpf         String     @unique
  nome        String
  email       String     @unique
  senha       String
  role        Role       @default(DOADOR)
  dataCriacao DateTime   @default(now())
  doacoes     Doacao[]
  endereco    Endereco?  @relation(fields: [idEndereco], references: [id])
  idEndereco  Int?       @unique
// Se este usuário for do tipo ONG, ele estará ligado a um perfil de ONG
  perfilOng   Ong?       @relation(fields: [ongId], references: [id])
  ongId       Int?       @unique
}

model Ong {
  id            Int        @id @default(autoincrement())
  nome          String
  cnpj          String     @unique
  telefone      String?
  descricao     String?
  status        Status     @default(pendente)
  dataCadastro  DateTime   @default(now())
  campanhas     Campanha[]
  endereco      Endereco?  @relation(fields: [idEndereco], references: [id])
  idEndereco    Int?       @unique
  gerente       Usuario?
}

model Campanha {
  id           Int        @id @default(autoincrement())
  nome         String
  descricao    String?
  meta         Decimal    @db.Decimal(10, 2)
  arrecadado   Decimal    @db.Decimal(10, 2) @default(0.00)
  status       Status     @default(ativa)
  dataInicio   DateTime   @default(now())
  dataFim      DateTime?
  ong          Ong        @relation(fields: [idOng], references: [id])
  idOng        Int
  doacoes      Doacao[]
}

model Doacao {
  id           Int        @id  @default(autoincrement())
  valor        Decimal    @db.Decimal(10, 2)
  dataDoacao   DateTime   @default(now())
  usuario      Usuario    @relation(fields: [idUsuario], references: [id])
  idUsuario    Int
  campanha     Campanha   @relation(fields: [idCampanha], references: [id])
  idCampanha   Int
  transacao    Transacao?
  
  certificado  CertificadoImpacto?
}


model Transacao {
  id                      Int             @id @default(autoincrement())
  stripePaymentIntentId   String          @unique 
  // O status vem direto do Stripe (ex: 'succeeded', 'processing'). 
  status                  String          
  
  metodoPagamento         MetodoPagamento
  dataPagamento           DateTime?
  
  doacao                  Doacao          @relation(fields: [idDoacao], references: [id])
  idDoacao                Int             @unique
}

enum Role {
  DOADOR
  ONG
  ADMIN
}

enum Status {
  pendente
  aprovada
  rejeitada
  ativa
  encerrada
}

enum MetodoPagamento {
  // Simplificado para indicar que a transação é gerenciada pelo Stripe.
  STRIPE
}
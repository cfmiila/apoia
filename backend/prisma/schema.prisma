datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  // output = "./diagrama.svg" 
  // theme = "dark"
}

model Endereco {
  id          Int     @id @default(autoincrement())
  cep         String
  logradouro  String
  numero      String
  complemento String?
  bairro      String
  cidade      String
  estado      String

  ong     Ong?
  usuario Usuario?
}

model CertificadoImpacto {
  id                Int      @id @default(autoincrement())
  codigoVerificacao String   @unique @default(uuid())
  dataEmissao       DateTime @default(now())
  descricaoImpacto  String
  urlCertificadoPdf String?
  doacao            Doacao   @relation(fields: [idDoacao], references: [id])
  idDoacao          Int      @unique
}

model Usuario {
  id                  Int             @id @default(autoincrement())
  cpf                 String          @unique
  nome                String
  email               String          @unique
  senha               String
  role                Role            @default(DOADOR)
  dataCriacao         DateTime        @default(now())
  doacoes             Doacao[]
  endereco            Endereco?       @relation(fields: [idEndereco], references: [id])
  idEndereco          Int?            @unique
  // Se este usuário for do tipo ONG, ele estará ligado a um perfil de ONG
  perfilOng           Ong?            @relation(fields: [ongId], references: [id])
  ongId               Int?            @unique
  imageUrl            String?
  eventosInteressados UsuarioEvento[]
}

model Ong {
  id           Int        @id @default(autoincrement())
  nome         String
  email        String     @unique
  senha        String
  cnpj         String     @unique
  telefone     String?
  descricao    String?
  status       Status     @default(pendente)
  dataCadastro DateTime   @default(now())
  campanhas    Campanha[]
  endereco     Endereco?  @relation(fields: [idEndereco], references: [id])
  idEndereco   Int?       @unique
  gerente      Usuario?
  imageUrl     String?
  eventos      Evento[]
}

model Campanha {
  id         Int       @id @default(autoincrement())
  nome       String
  descricao  String?
  meta       Decimal   @db.Decimal(10, 2)
  arrecadado Decimal   @default(0.00) @db.Decimal(10, 2)
  status     Status    @default(ativa)
  dataInicio DateTime  @default(now())
  dataFim    DateTime?
  ong        Ong       @relation(fields: [idOng], references: [id])
  idOng      Int
  doacoes    Doacao[]
  imageUrl   String?
}

model Doacao {
  id         Int        @id @default(autoincrement())
  valor      Decimal    @db.Decimal(10, 2)
  dataDoacao DateTime   @default(now())
  status       String    @default("pendente")
  usuario    Usuario    @relation(fields: [idUsuario], references: [id])
  idUsuario  Int
  idCampanha Int
  idTransacao  Int?
  campanha   Campanha   @relation(fields: [idCampanha], references: [id])
  
  transacao  Transacao?

  certificado CertificadoImpacto?
}

model Transacao {
  id                    Int    @id @default(autoincrement())
  stripePaymentIntentId String? @unique
  // O status vem direto do Stripe (ex: 'succeeded', 'processing'). 
  status                String

  metodoPagamento MetodoPagamento
  dataPagamento   DateTime?

  doacao   Doacao @relation(fields: [idDoacao], references: [id])
  idDoacao Int    @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Evento {
  id           Int             @id @default(autoincrement())
  nome         String
  descricao    String
  data         DateTime
  horario      String
  local        String // nome do local (ex: "Praça Central")
  endereco     String // pode ser um campo livre ou vinculado ao model Endereco
  imagemUrl    String? // imagem de divulgação
  ong          Ong             @relation(fields: [idOng], references: [id])
  idOng        Int
  interessados UsuarioEvento[] // relacionamento com doadores interessados
  criadoEm     DateTime        @default(now())
}

model UsuarioEvento {
  id        Int      @id @default(autoincrement())
  usuario   Usuario  @relation(fields: [idUsuario], references: [id])
  idUsuario Int
  evento    Evento   @relation(fields: [idEvento], references: [id])
  idEvento  Int
  criadoEm  DateTime @default(now())

  @@unique([idUsuario, idEvento]) // um usuário não pode se registrar duas vezes no mesmo evento
}

enum Role {
  DOADOR
  ONG
  ADMIN
}

enum Status {
  pendente
  aprovada
  rejeitada
  ativa
  encerrada
}

enum MetodoPagamento {
  // Simplificado para indicar que a transação é gerenciada pelo Stripe.
  STRIPE
}
